{
   "keywordspec": {
      "version": "",
      "scope": "global",
      "namedargs": "yes",
      "doc": "A library for interacting with Autosphere work items.\n\n`Items` is a collection of keywords for handling data\nthat is moved between different processes and Robot Framework\ntasks. It allows storing and restoring values to/from cloud or file based\nstorage, and manipulating their contents.\n\n:param load_env: Automatically load work item using environment variables\n:param default_adapter: Set default adapter if not overriden by environment\n\nEnvironment variables:\n\n* AutoSphere_WORKITEMS_ADAPTER: Import path to adapter, e.g. \"mymodule.MyAdapter\"\n* RC_WORKSPACE_ID:       Current default workspace ID\n* RC_WORKITEM_ID:        Current default work item ID",
      "init": {
         "arguments": {
            "arg": [
               "load_env=True",
               "default_adapter=<class 'Items.RobocorpAdapter'>"
            ]
         },
         "doc": "Initialize self.  See help(type(self)) for accurate signature.",
         "_lineno": "507"
      },
      "kw": [
         {
            "arguments": {
               "arg": [
                  "path",
                  "name=None"
               ]
            },
            "doc": "Add given file to work item.\n\nNOTE: Files are not uploaded before work item is saved\n\nExample:\n\n.. code-block:: robotframework\n\n    Add work item file    output.xls\n    Save work item\n\n:param path: Path to file on disk\n:param name: Destination name for file. If not given, current name\n             of local file is used.",
            "_name": "Add Work Item File",
            "_lineno": "783"
         },
         {
            "arguments": {
               "arg": [
                  "pattern"
               ]
            },
            "doc": "Add all files that match given pattern to work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    Add work item files    %{ROBOT_ROOT}/generated/*.csv\n    Save work item\n\n:param pattern: Path wildcard pattern",
            "_name": "Add Work Item Files",
            "_lineno": "850"
         },
         {
            "doc": "Remove all data in the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    Clear work item\n    Save work item",
            "_name": "Clear Work Item",
            "_lineno": "581"
         },
         {
            "arguments": {
               "arg": [
                  "*names",
                  "force=True"
               ]
            },
            "doc": "Delete variable(s) from the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    Delete work item variables    username    email\n    Save work item\n\n:param names:  names of variables to remove\n:param force:  ignore variables that don't exist in work item",
            "_name": "Delete Work Item Variables",
            "_lineno": "711"
         },
         {
            "arguments": {
               "arg": [
                  "name",
                  "path=None"
               ]
            },
            "doc": "Get attached file from work item to disk.\nReturns the absolute path to the created file.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${path}=    Get work item file    input.xls\n    Open workbook    ${path}\n\n:param name: Name of attached file\n:param path: Destination path of file. If not given, current\n             working directory is used.",
            "_name": "Get Work Item File",
            "_lineno": "763"
         },
         {
            "arguments": {
               "arg": [
                  "pattern",
                  "dirname=None"
               ]
            },
            "doc": "Get files attached to work item that match given pattern.\nReturns a list of absolute paths to the downloaded files.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${paths}=    Get work item files    customer_*.xlsx\n    FOR  ${path}  IN  @{paths}\n        Handle customer file    ${path}\n    END\n\n:param pattern: Filename wildcard pattern\n:param dirname: Destination directory, if not given robot root is used",
            "_name": "Get Work Item Files",
            "_lineno": "822"
         },
         {
            "doc": "Get the full JSON payload for a work item.\n\nNOTE: Most use cases should prefer higher-level keywords.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${payload}=    Get work item payload\n    Log    Entire payload as dictionary: ${payload}",
            "_name": "Get Work Item Payload",
            "_lineno": "595"
         },
         {
            "arguments": {
               "arg": [
                  "name",
                  "default=<object object at 0x04B9B830>"
               ]
            },
            "doc": "Return a single variable value from the work item,\nor default value if defined and key does not exist.\nIf key does not exist and default is not defined, raises `KeyError`.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${username}=    Get work item variable    username    default=guest\n\n:param key:     Name of variable\n:param default: Default value if key does not exist",
            "_name": "Get Work Item Variable",
            "_lineno": "640"
         },
         {
            "doc": "Read all variables from the current work item and\nreturn their names and values as a dictionary.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${variables}=    Get work item variables\n    Log    Username: ${variables}[username], Email: ${variables}[email]",
            "_name": "Get Work Item Variables",
            "_lineno": "663"
         },
         {
            "doc": "List the names of files attached to the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${names}=    List work item files\n    Log    Work item has files with names: ${names}",
            "_name": "List Work Item Files",
            "_lineno": "749"
         },
         {
            "doc": "List the variable names for the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${variables}=    List work item variables\n    Log    Available variables in work item: ${variables}",
            "_name": "List Work Item Variables",
            "_lineno": "627"
         },
         {
            "arguments": {
               "arg": [
                  "workspace_id",
                  "item_id"
               ]
            },
            "doc": "Load work item for reading/writing.\n\nNOTE: Currently only one work item per execution is supported\n      by Robocorp Cloud, which should be loaded automatically.\n\n:param workspace_id:    Workspace ID which contains item\n:param item_id:         Workitem ID to load",
            "_name": "Load Work Item",
            "_lineno": "559"
         },
         {
            "doc": "Load current work item defined by the runtime environment.\n\nThe corresponding environment variables are:\n\n* RC_WORKSPACE_ID\n* RC_WORKITEM_ID",
            "_name": "Load Work Item From Environment",
            "_lineno": "547"
         },
         {
            "arguments": {
               "arg": [
                  "name",
                  "missing_ok=True"
               ]
            },
            "doc": "Remove attached file from work item.\n\nNOTE: Files are not deleted before work item is saved\n\nExample:\n\n.. code-block:: robotframework\n\n    Remove work item file    input.xls\n    Save work item\n\n:param name:       Name of attached file\n:param missing_ok: Do not raise exception if file doesn't exist",
            "_name": "Remove Work Item File",
            "_lineno": "803"
         },
         {
            "arguments": {
               "arg": [
                  "pattern",
                  "missing_ok=True"
               ]
            },
            "doc": "Removes files attached to work item that match given pattern.\n\nExample:\n\n.. code-block:: robotframework\n\n    Remove work item files    *.xlsx\n    Save work item\n\n:param pattern: Filename wildcard pattern\n:param missing_ok: Do not raise exception if file doesn't exist",
            "_name": "Remove Work Item Files",
            "_lineno": "872"
         },
         {
            "doc": "Save the current data in the work item. If not saved,\nall changes are discarded when the library goes out of scope.",
            "_name": "Save Work Item",
            "_lineno": "574"
         },
         {
            "doc": "Convert all variables in the current work item to\nRobot Framework task variables.\n\nExample:\n\n.. code-block:: robotframework\n\n    # Work item has variable INPUT_URL\n    Set task variables from work item\n    Log    The variable is now available: ${INPUT_URL}",
            "_name": "Set Task Variables From Work Item",
            "_lineno": "732"
         },
         {
            "arguments": {
               "arg": [
                  "payload"
               ]
            },
            "doc": "Set the full JSON payload for a work item.\n\nNOTE: Most use cases should prefer higher-level keywords.\n\nExample:\n\n.. code-block:: robotframework\n\n    ${output}=    Create dictionary    url=example.com    username=Mark\n    Set work item payload    ${output}\n\n:param payload: Content of payload, must be JSON-serializable",
            "_name": "Set Work Item Payload",
            "_lineno": "610"
         },
         {
            "arguments": {
               "arg": [
                  "name",
                  "value"
               ]
            },
            "doc": "Set a single variable value in the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    Set work item variable    username    MarkyMark\n    Save work item\n\n:param key:     Name of variable\n:param value:   Value of variable",
            "_name": "Set Work Item Variable",
            "_lineno": "677"
         },
         {
            "arguments": {
               "arg": [
                  "**kwargs"
               ]
            },
            "doc": "Set multiple variables in the current work item.\n\nExample:\n\n.. code-block:: robotframework\n\n    Set work item variables    username=MarkyMark    email=mark@example.com\n    Save work item\n\n:param kwargs: Pairs of variable names and values",
            "_name": "Set Work Item Variables",
            "_lineno": "694"
         }
      ],
      "_name": "Items",
      "_type": "LIBRARY",
      "_format": "ROBOT",
      "_scope": "GLOBAL",
      "_namedargs": "true",
      "_generated": "2021-03-30T11:20:02Z",
      "_specversion": "2",
      "_source": "C:\\Program Files\\Autosphere\\Process Studio\\App\\Python\\Lib\\site-packages\\Autosphere\\Robocloud\\Items.py",
      "_lineno": "486"
   }
}